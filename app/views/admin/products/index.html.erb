<h2> Product List </h2>
<div class="pull-right" style="padding-bottom: 20px;">
  <%= link_to("新增产品", new_admin_product_path, class: "btn btn-primary btn-sm") %>
</div>
<table class="table table-bordered">
  <thead>
    <tr>
      <th>#</th>
      <th>拖住移动</th>
      <th>置顶／置底</th>
      <th width="220">Product Pic</th>
      <th>Name</th>
      <th>Price</th>
      <th width="100"> Options</th>
    </tr>
  </thead>
  <tbody class="sortable">
    <% @products.each do |product| %>
      <tr data-reorder-url="<%= reorder_admin_product_path(product) %>">
        <td>
          <%= product.id %>
        </td>
        <td>
          <span class="sortable_icon">☰</span>
        </td>

        <td>
           <%= link_to "置顶", reorder_admin_product_path(product, :position => :first), :method => :post, :class => "btn btn-default" %>
           <%= link_to "置底", reorder_admin_product_path(product, :position => :last), :method => :post, :class => "btn btn-default" %>
         </td>



        <td>
          <%= link_to product_path(product) do %>

            <% if product.photos.present? %>

              <%= image_tag(product.photos[0].avatar.thumb.url, class: "thumbnail") %>
            <% else %>
              <%= image_tag("http://placehold.it/200x200&text=No Pic", class: "thumbnail") %>
            <% end %>
          <% end %>
        </td>
        <td>
          <%= product.title %>
        </td>
        <td>
          <%= product.price %>
        </td>
        <td>
          <%= link_to("Edit", edit_admin_product_path(product)) %>
          <%= link_to("Destroy", admin_product_path(product), :method => :delete, :data => { :confirm => "Are you sure?" }) %>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>

<script>
  $( ".sortable" ).sortable({
    axis: 'y',       // 限制只能上下拖拉
    items: 'tr',     // 拖拉整个 tr
    cursor: 'move',  // 变更拖拉时的 icon
    handle: ".sortable_icon",  // 限制只有点 ☰ 才能开始拖拉，砍掉这行的话，会是整个 tr 都可以进行拖拉，你可以试试看
    stop: function(e, ui){     // 当拖拉结束时，会调用这个方法
      ui.item.children('td').effect('highlight', {}, 1000)
    },
    update: function(e, ui) {   // 当拖拉结束并且 DOM 上的位置变更时，会调用这个方法
      reorder_url = ui.item.data('reorder-url')
      position = ui.item.index()  // 取得顺序
      $.ajax({
       type: 'POST',
       url: reorder_url,
       dataType: 'json',
       data: { position: position }
      })
    }
  });
</script>
